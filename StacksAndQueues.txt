Week 1: Stacks and Queues Notes

Stacks: Like a stack of books, add and remove from the top, “last in first out”. Basic functions: Push (Add item to the stack), Pop (remove item from stack), isEmpty (check if stack is empty).

Queues: “First in first out” policy. Similar operations to Stack but Popping removes the oldest item.


Stacks and Queues can be implemented using arrays or linked lists

Arrays: Very quick to access elements (because memory stored in a contiguous row), however when an array runs out of space it’s expensive to resize. In order to solve this increase the size of the array when full and decrease when quarter empty. With dynamic lists the ‘amortised’ time will be 0(1), which just means that generally operations take constant time however occasionally (when resizing occurs) operations will take linear time.

Linked Lists: Rather than storing data in a contiguous block of memory, each element has a pointer to the location of the next element in the list. Dealing with the links requires extra time and space but an advantage is that every operation is constant time.

Use Arrays for high average speed however use linked lists when you need the guarantee that no operations will take a long time.


Useful Videos:
Array Implementation of stack: 
	https://www.youtube.com/watch?v=sFVxsglODoo&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=15&ab_channel=mycodeschool
Linked list implementation of stack:
	https://www.youtube.com/watch?v=MuwxQ2IB8lQ&list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&index=16&ab_channel=mycodeschool
MIT in depth video on arrays and linked lists: 
	https://www.youtube.com/watch?v=CHhwJjR0mZA&list=PLUl4u3cNGP63EdVPNLG3ToM6LaEUuStEY&index=2&ab_channel=MITOpenCourseWare

Useful blogs:
Linked lists and Arrays, big 0 Notation: 
	https://medium.com/@mckenziefiege/arrays-linked-lists-and-big-o-notation-486727b6259b
How array resizing works in python: 
	https://towardsdatascience.com/how-lists-in-python-are-optimised-internally-for-better-performance-847c8123b7fa

Leet Code Exercises:
Easy:
	https://leetcode.com/problems/validate-stack-sequences/

Medium:
	https://leetcode.com/problems/min-stack/

Hard:
	https://leetcode.com/problems/maximum-frequency-stack/

